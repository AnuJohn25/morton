# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
  
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B -V install -DskipTests=true -Dmaven.javadoc.skip=true
    - name: create maven artifacts
      uses: actions/upload-artifact@v2
      with:
        name: create war file
        path: target/morton.war
        
    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
        role-session-name: GithubActionDeployment
        aws-region: ap-southeast-2
        
    - name: Copy war to S3 bucket
      run: |
        aws s3 cp target/morton.war s3://morton-war/
        
    - name: Deploy to EB
      uses: Amraneze/aws-beanstalk-deploy@master
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: morton-app
        environment_name: Mortonapp-env
        region: ap-southeast-2
        ebs_version_label: ver-${{ github.sha }}
        s3_file_path: morton.war
        s3_bucket_name: morton-war

